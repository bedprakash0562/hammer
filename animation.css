*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
.container {
    width: 100%;
    height:100vh;
    background-color: rgb(173, 40, 173);
    background-image: linear-gradient(to the left);
    align-items: center;
    display: flex;
    justify-content: center;
    flex-direction: column;


}
.box{
    height: 100px;
    width: 100px;
    border: 10px solid black;
    border-radius: 50px;
    border: 10px solid rgba(255,255,255,0.473);
    border-top: 10px solid white;
    border-radius: 50px;
    animation: loader 1.5s linear infinite;

}
.container p{
    text-transform: uppercase;
    color: white;
    margin-top: 20px;
    font-size: 30px;
    letter-spacing: 5px;
    animation: flash 1s linear infinite;
    animation: identifier 1.5s linear infinite;


}
span{
    font-size: 50px;
}
@keyframes loader{
    0%{
        transform: none;
    }
    100%{
        transform: rotate(360deg);
    }
}
@keyframes identifier {
    0%{
        transform: none;

    }
    100%{
        transform: scale(-.1);

    }
    
}
@keyframes example {
    0%   {background-color: red;}
    25%  {background-color: yellow;}
    50%  {background-color: blue;}
    100% {background-color: green;}
  }
  
  /* The element to apply the animation to */
  /* div {
    width: 100px;
    height: 100px;
    background-color: red;
    animation-name: example;
    animation-duration: 9s;
  } */
  /* The following example will change both the background-color and the position of the <div> element when the animation is 25% complete, 50% complete, and again when the animation is 100% complete: */
  /* @keyframes example {
    0%   {background-color:red; left:0px; top:0px;}
    25%  {background-color:yellow; left:200px; top:0px;}
    50%  {background-color:blue; left:200px; top:200px;}
    75%  {background-color:green; left:0px; top:200px;}
    100% {background-color:red; left:0px; top:0px;}
  } */
  
  /* The element to apply the animation to */
  /* div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 9s;
  } */
  /* he animation-delay property specifies a delay for the start of an animation.

The following example has a 2 seconds delay before starting the animation: */

  div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-delay: 2s;
  }
  /* Negative values are also allowed. If using negative values, the animation will start as if it had already been playing for N seconds.

  In the following example, the animation will start as if it had already been playing for 2 seconds:  */
   /* div { 
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-delay: -2s;
  } */
  /* The following example uses the value "infinite" to make the animation continue for ever: */
  div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: infinite;
  }
 
  /* The following example will run the animation in reverse direction (backwards): */
  /* div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-direction: reverse;
  }
   */